AWSTemplateFormatVersion: '2010-09-09'
Parameters:
  EnvironmentName:
    Type: String
  AppName:
    Type: String
  Name:
    Type: String
  VPCData:
    Description: VPCID of data
    Type: String
  LatestAMI:
    Description: Static reference to latest Amazon Linux 2 AMI
    Type: 'AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>'
    Default: /aws/service/ami-amazon-linux-latest/amzn2-ami-kernel-5.10-hvm-x86_64-gp2
  InstanceType:
    Description: Instance size for the Bastion Host (default - t3.micro)
    Type: String
    AllowedValues:
      - t3.micro
    Default: t3.micro
Resources:
  KeyPairBastion:
    Type: AWS::EC2::KeyPair
    Properties: 
      KeyName: 'bastion-key-pair'
      KeyType: 'rsa'
  SSMKeyPairBastion:
    Type: 'AWS::SSM::Parameter'
    Properties:
      Name: !Sub '/config/infra/${EnvironmentName}/${AppName}/key-pair'
      Tier: Standard
      Type: String
      Value: !Ref KeyPairBastion

  BastionSG:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupName: no-ingress-sg-Ec2
      GroupDescription: Security group with no ingress rule for ec2
      VpcId: !Ref VPCData
  
  BastionLaunchTemplate:
    Type: AWS::EC2::LaunchTemplate
    Properties:
      LaunchTemplateName: !Sub ${AWS::StackName}-launch-template
      LaunchTemplateData:
        ImageId: !Ref LatestAMI
        IamInstanceProfile:
          Arn: !GetAtt BastionInstanceProfile.Arn
        InstanceType: !Ref InstanceType
        SecurityGroupIds:
          - !Ref BastionSG
        KeyName: !Ref KeyPairBastion
        BlockDeviceMappings: 
          - DeviceName: /dev/xvda
            Ebs: 
              VolumeSize: 150
              DeleteOnTermination: true
        UserData: 
          Fn::Base64: !Sub |
            #!/bin/bash -x
            yum install -y aws-cfn-bootstrap
            /opt/aws/bin/cfn-signal -e $? --stack ${AWS::StackName} --resource myASG --region ${AWS::Region}

  BastionASG:
    Type: 'AWS::AutoScaling::AutoScalingGroup'
    Properties:
      AutoScalingGroupName: !Join
        - '-'
        - - !Ref Name
          - BastionASG
      LaunchTemplate:
        LaunchTemplateId: !Ref BastionLaunchTemplate
        Version: !GetAtt BastionLaunchTemplate.LatestVersionNumber
      VPCZoneIdentifier:
        Fn::Transform:
            Name: 'read-ssm-from-path'
            Parameters:
              Path: !Sub '/config/infra/${EnvironmentName}/${AppName}/private_subnet/'
      MinSize: '1'
      DesiredCapacity: '1'
      MaxSize: '1'
      Tags:
        - Key: Name
          Value: !Join
            - '-'
            - - Name
              - BastionHost
          PropagateAtLaunch: true
  BastionRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action: 'sts:AssumeRole'
            Principal:
              Service: ec2.amazonaws.com
      Path: /
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore'
  BastionPolicies:
    Type: 'AWS::IAM::Policy'
    Properties:
      PolicyName: !Sub bastion-${AppName}-policy
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - 'ssm:UpdateInstanceInformation'
              - 'ssmmessages:CreateControlChannel'
              - 'ssmmessages:CreateDataChannel'
              - 'ssmmessages:OpenControlChannel'
              - 'ssmmessages:OpenDataChannel'
            Resource: '*'
          - Effect: Allow
            Action:
              - 's3:GetEncryptionConfiguration'
            Resource: '*'
      Roles:
        - !Ref BastionRole
  BastionInstanceProfile:
    Type: 'AWS::IAM::InstanceProfile'
    Properties:
      Path: /
      Roles:
        - !Ref BastionRole

  BastionEI:
    Type: 'AWS::EC2::EIP'
    Properties:
      Domain: vpc


Outputs:
  BastionSG:
    Description: Connection endpoint for the database
    Value: !GetAtt BastionSG.GroupId