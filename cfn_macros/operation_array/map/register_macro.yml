AWSTemplateFormatVersion: "2010-09-09"
Description: This stack create a CFN macro for map array operations.
Parameters:
  EnvironmentName:
    Type: String
  AppName:
    Type: String
Resources:
  MapArrayFuncRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Action: 'sts:AssumeRole'
            Principal:
              Service:
                - lambda.amazonaws.com
      Path: /
      Policies:
        -
          PolicyName: !Sub '${EnvironmentName}-${AppName}-lambda-execution-rol'
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                  - logs:DescribeLogStreams
                Resource: !Sub arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:*
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AWSLambdaExecute
  MapArrayFunc:
    Type: AWS::Lambda::Function
    Properties:
      Runtime: python3.12
      Handler: lambda_function.handler
      Code:
        ZipFile: !Rain::Embed lambda_function.py
      Role: !GetAtt MapArrayFuncRole.Arn
      FunctionName: !Sub "${EnvironmentName}-${AppName}-cfn-macro-map-array"
      MemorySize: 128
      Timeout: 15
      Environment:
        Variables:
          ENVIRONMENT: !Ref EnvironmentName
          APP_NAME: !Ref AppName
  LGCMapArrayFunc:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/${MapArrayFunc}
      RetentionInDays: 5
  MacroMapArrayFunc:
    Type: AWS::CloudFormation::Macro
    Properties:
      Description: A macro for map array operations
      FunctionName: !GetAtt MapArrayFunc.Arn
      Name: !Sub "${EnvironmentName}-${AppName}-map-array-macro"

Outputs:
  FunctionArn:
    Value: !GetAtt MapArrayFunc.Arn